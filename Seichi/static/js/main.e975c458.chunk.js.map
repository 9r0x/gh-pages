{"version":3,"sources":["App.js","index.js"],"names":["response","require","Marker","place","lat","lng","id","placename","title","url","content","react_default","a","createElement","href","Math","abs","key","popover","icon","type","style","fontSize","color","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","center","zoom","data","_this$state","height","width","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","filter","map","App_Marker","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"upnDAIMA,EAAWC,EAAQ,KAEnBC,EAAS,SAACC,GAAU,IAEtBC,EAMED,EANFC,IACAC,EAKEF,EALFE,IACAC,EAIEH,EAJFG,GACAC,EAGEJ,EAHFI,UACAC,EAEEL,EAFFK,MACAC,EACEN,EADFM,IAEIC,EACJC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,KAAGC,KAAML,GACND,IAGLG,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,4BACCE,KAAKC,IAAIZ,IAASA,GAAO,EAAK,WAAQ,aAEzCO,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,6BACCE,KAAKC,IAAIX,IAASA,GAAO,EAAK,WAAQ,cAI7C,OACEM,EAAAC,EAAAC,cAAA,OAAKI,IAAKX,EAAIF,IAAKA,EAAKC,IAAKA,GAC3BM,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASR,QAASA,EAASF,MAAOD,GAChCI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,UAAUC,MAAO,CAAEC,SAAU,OAAQC,MAAO,gBAmChDC,cA5Bb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,OAAQ,CACN7B,IAAK,UACLC,IAAK,YAEP6B,KAAM,GACNC,KAAMnC,GARIyB,wEAYL,IAAAW,EACwBR,KAAKI,MAA5BC,EADDG,EACCH,OAAQC,EADTE,EACSF,KAAMC,EADfC,EACeD,KACtB,OACExB,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAEgB,OAAQ,QAASC,MAAO,SACpC3B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CACE4B,iBAAkB,CAAEvB,IAAK,2CACzBwB,cAAeR,EACfS,YAAaR,GAEZC,EAAKQ,OAAO,SAAAxC,GAAK,OAAIA,EAAMC,MAAKwC,IAAI,SAAAzC,GAAK,OAAIQ,EAAAC,EAAAC,cAACgC,EAAW1C,cAtBlD2C,aCtClBC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e975c458.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { Icon, Popover } from 'antd';\n\nconst response = require('./data/res.json');\n\nconst Marker = (place) => {\n  const {\n    lat,\n    lng,\n    id,\n    placename,\n    title,\n    url,\n  } = place;\n  const content = (\n    <div>\n      <p>\n        <strong>Title: </strong>\n        <a href={url}>\n          {title}\n        </a>\n      </p>\n      <p>\n        <strong>Latitude: </strong>\n        {Math.abs(lat) + ((lat >= 0) ? '˚ N' : '˚ S')}\n      </p>\n      <p>\n        <strong>Longitude: </strong>\n        {Math.abs(lng) + ((lng >= 0) ? '˚ E' : '˚ W')}\n      </p>\n    </div>\n  );\n  return (\n    <div key={id} lat={lat} lng={lng}>\n      <Popover content={content} title={placename}>\n        <Icon type=\"pushpin\" style={{ fontSize: '10px', color: '#eb2f96' }} />\n      </Popover>\n    </div>\n  );\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      center: {\n        lat: 35.675888,\n        lng: 139.744858,\n      },\n      zoom: 11,\n      data: response,\n    };\n  }\n\n  render() {\n    const { center, zoom, data } = this.state;\n    return (\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyAS_gZ-8P6SSW5eru7JCoFTls4vT6fp3KU' }}\n          defaultCenter={center}\n          defaultZoom={zoom}\n        >\n          {data.filter(place => place.lat).map(place => <Marker {...place} />)}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}